/*
Copyright 2018 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package testutil

const (
	QualifiedImage = "gcr.io/image/digest@sha256:0000000000000000000000000000000000000000000000000000000000000000"
	IntTestImage   = "gcr.io/kritis-int-test/test-image@sha256:3e2e946cb834c4538b789312d566eb16f4a27734fc6b140a3b3f85baafce965f"
)

// PublicTestKey is base encoded sig for image gcr.io/kritis-project/kritis-server@sha256:b3f3eccfd27c9864312af3796067e7db28007a1566e1e042c5862eed3ff1b2c8
// created using: gpg --quick-generate-key --yes test@kritis.org && gpg --armor --export test@kritis.org | base64
var PublicTestKey = "LS0tLS1CRUdJTiBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tDQoNCm1RR05CRnRpRXNNQkRBREhVK3VLam9CYUFzT2lRSVlENlQvTDlFcWI1SzdoL0hYUW5FOUVIRENKVWlHQ3B0RkcNCkpsSG9MSFVFR0dFWE1Ya3gyZkhNaDByK1p2NTQvSExPZWU5ODBycERGcUZTMUUzSC9RZm1LMW5aUzhSWENSVjENCmJ1UElwM3hBc2FiQnE2Y1B3K2tMYUxlOGdzaDhmMys4THd1aTlNYUJBZGYyVzlhT3dsVmJiMWcrMDVPa1VFTEUNCkVsTXdwRklBd1k0ZVFpSlFuZXF6WG9PQllKaDJWS2tFK3lDaGxrOXVGSHRtZGEvRlI3U3lMaW1jYm1JemdMYVANCll4TlZwNTE4anArenNOSW9NUTFoRVBoRXVxOWZRT2N1ZkMyVFNlMDE5dFQrZUVsUTZaOUJTOXdDZjBRYU9HMDMNCkVTdFpUa2xrcE02NG1vUmxXbURxQjNEWmRQY1lSNmZtY0REQmpSRzBOVjlqUm1PM0lVZkFkWmw0cUNxT2NTTXUNCmlLQ0FKVnZUK0ZBWnUyQ3EwZ3NOblF1a1N0WmRTOGNDQVF0MExpTXY3U1NjQkFVYnMrQmY3b0VQMnVwSWRBV1QNCkpjNngzUXhxeVVvOHNnbGZ4YjF4M1djemcrTEhNTExWYXdxRW1Ea3Fycy9xS0pWVEpFZDB3SEtoU2dHejlXMmMNCit0MmlEdmJsdm1jY3RHY0FFUUVBQWJRUGRHVnpkRUJyY21sMGFYTXViM0puaVFIVUJCTUJDZ0ErRmlFRTBvT2wNCjlmWDE3S3FlOFlYRnJvdHBsQkZqRmFNRkFsdGlFc01DR3dNRkNRUENad0FGQ3drSUJ3SUdGUW9KQ0FzQ0JCWUMNCkF3RUNIZ0VDRjRBQUNna1Fyb3RwbEJGakZhTjQrQXYvY3BtZkliWmtucFEzRmJKVXBONDFia2hJRUt4SDhEdWYNCjRQMVpob3J3QndQRmtSek1scFdXNDM0UVNFL25wUVE5WEpwbHJ1RUNacGpIOWdMRmRreGplbUNXK1NpZm5EbzQNCjIzTUlqN3RlVW41SkdySzdCWmZRcEJwa1Q2clVHNlVrOXFUUk5WUHl3dG1paUhoWlNMS3RUeVkzLy9NdGpwTmINCk9xZVV3R2IyWmp0cEh4SFovZ2thcWpQazlackpGZDlmMzFxcy9mRHc1Rm5FeXpjQ3dBaEkxWFRCN2NJZ3o0U2sNClFhd2dSWG1FWXhxcnJqUXBqd3psTHJaWXFsUjRIMUZqVlNmZDgwenl1VGQ4QnBlSlJLRUZiZTVHaEFnMkpvN3QNCmhyWWVIQzV1WEFtUzFLcXhYdENlbW5iSmlvNkpOWU5TWDZWM1VScVZoS3NSclJPQmd6NkRtQzVydlhQcUxJV08NCnZ2VDVWMk5nOVVoMFpqdGorMGJKSXFMTmhMZ1hEMjR5alNIWlJobmFvRjF4TDFqb3FuQjlBM29FSnA2QVkzbXUNCnFUek1UTmJRN2pMSUJGWEJYTCtSMTJUVHlKbnhVM0thWjZZV3BBdnd3SWs1d2w5ZGVWbzh4dUdLRXNEWUFaOTINCmdZTGxWNGV1RFExbEE0Q0kxTFYzU0tlZGpDcS95VWFDdVFHTkJGdGlFc01CREFERllxY2JpTHpDaldFb1dUaGsNCmxxRmlCU2w3WGZsK1lnNnBqYk5XL3JCUFNDa285Nk1qVGo3SlZPSW9UMDJ2OVFxZVFhdlg4S0tJMlVMRzRYVEkNClFZVndpUUYwNm5xQ3BCRml1dW9DN2ViVmlWMVZKZlNCbGlOeW1qUVFpSDVFdmo2MUJ5UmszTzhnaXlLNTdXWVYNCnN6aTJDUnJSbUhmK084UnQwQjFmVEtaWEtjR1dFdG00cGFUeTd5TmJhL0FneVc1TXBsRHRCb0Y3UWRBay94cDMNCmpLWXRubmJkWmpYM0xQRzVka0hIeGMyZUo1RXd2bTloVmN0Y1NDSVBWVUMvMUhiWlhnVFUrbGE5OExVMTJ3Z1MNCng4UzJkQ2ltZGI5bXlnS21BZjBCT3BmZnF6NTY1T1FOV1VqS1ZHUjV1c2ZONUJQYkZtdEZyclk3NlN4NWVZdHcNCmF0bDRDai9TQ0tBdVR3d09pL1ZjT1pnU0tBc0NHTTlJeWJHc3Zyd3BabG5LdU9mZ2dKYmdFRW1CVGVONTV0ZTINClZVUDltaU1yaVJoRHlRTlZUeWFiUXpDeExqSi9UQlYxdm14Y1Z2NlNPSkxudWhZRVV1eTNHbGxhQjFIUUVYUWYNClJDbzBWQzdKMTFPVXlDMUtrSzNrS3JoY0dGNnZFSjE0c2tYWEJHNFVZUmhVaU1jQUVRRUFBWWtCdGdRWUFRb0ENCklCWWhCTktEcGZYMTlleXFudkdGeGE2TGFaUVJZeFdqQlFKYlloTERBaHNNQUFvSkVLNkxhWlFSWXhXakV0WUwNCi8yQjBFOFVtTjZldlYyVFBud25qejFmTml0SnRSc2JMSDdJbzRuaTQ1OUZ4bWJFMXhrZUM4R3lWVE4rTCtYOGINCllOZlF1TnRxL0F0b3FCMEdqY0NyazNyam02Y3JwNnFvaEJ2UndoRlErMmFHQ1JCenZGQ1UxOFZEdjF0UVZXQU8NCnVCcjZNRmh6cUxiRkc0RDkvMEtKYlRhdGJiekdvZFV2UUhhL2gwczY3YmVGTHhnTDJSeHRoa2pqbzNhZkFIMTANCm9wNndXMnQ3aW1xVkxJQjl4SWtyNVlBTGdtbXJBQ2VKNmFhY2ZiN2Njb1JrR2JlTmJrcWZOOEpQNitQbWtaOWgNClNlcmxCbEVzQk8yWEs1K1d0RVBOT2RtNnE1TWNIekdOSUxrUERVc09KWk5BM3VvVW1uYStubTVPYVMvU0tOWG4NCjhYYVZBdWFsTHo4aHZmZWVBU0YxRHdmc05BQTJxanNpejloQllxemFqTzEwemg4SHdHRFJKNmt5U3lNYktHRUMNCmVjL2Z4a1N3NGl3ODVGbjk5Y2pDaTBXbnIwUVk4UVJLOFd0cWZGWmxvTWd3WnF2QTlleVRTN29zZG0vQk10YjINCnA4bTFOVFd5MkUzeTI1aE14a2xxQnJsVm96eVBFMFMySU5oQlhQOHR6V3lVbXQyVnVXdHdLZFNnM2diUGw4QUINCk93PT0NCj16bUQvDQotLS0tLUVORCBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0t"

// PrivateTestKey is Base 64 encoded private key for above generated public private gpg keys.
// Created using: gpg --export-secret-keys --armor D283A5F5F5F5ECAA9EF185C5AE8B6994116315A3 | base64
var PrivateTestKey = "LS0tLS1CRUdJTiBQR1AgUFJJVkFURSBLRVkgQkxPQ0stLS0tLQ0KDQpsUVZZQkZ0aUVzTUJEQURIVSt1S2pvQmFBc09pUUlZRDZUL0w5RXFiNUs3aC9IWFFuRTlFSERDSlVpR0NwdEZHDQpKbEhvTEhVRUdHRVhNWGt4MmZITWgwcitadjU0L0hMT2VlOTgwcnBERnFGUzFFM0gvUWZtSzFuWlM4UlhDUlYxDQpidVBJcDN4QXNhYkJxNmNQdytrTGFMZThnc2g4ZjMrOEx3dWk5TWFCQWRmMlc5YU93bFZiYjFnKzA1T2tVRUxFDQpFbE13cEZJQXdZNGVRaUpRbmVxelhvT0JZSmgyVktrRSt5Q2hsazl1Rkh0bWRhL0ZSN1N5TGltY2JtSXpnTGFQDQpZeE5WcDUxOGpwK3pzTklvTVExaEVQaEV1cTlmUU9jdWZDMlRTZTAxOXRUK2VFbFE2WjlCUzl3Q2YwUWFPRzAzDQpFU3RaVGtsa3BNNjRtb1JsV21EcUIzRFpkUGNZUjZmbWNEREJqUkcwTlY5alJtTzNJVWZBZFpsNHFDcU9jU011DQppS0NBSlZ2VCtGQVp1MkNxMGdzTm5RdWtTdFpkUzhjQ0FRdDBMaU12N1NTY0JBVWJzK0JmN29FUDJ1cElkQVdUDQpKYzZ4M1F4cXlVbzhzZ2xmeGIxeDNXY3pnK0xITUxMVmF3cUVtRGtxcnMvcUtKVlRKRWQwd0hLaFNnR3o5VzJjDQordDJpRHZibHZtY2N0R2NBRVFFQUFRQUwvamlVSXc4MHpNei83TjBBMkttQ2kwZk93MkRGeERoRVM0TFg0NDRQDQpQRjIyTU9uZmhSYVc2UGZ3cXBScmdSK3V2TnFBSlNqcm5FZGpIOGRpelFtN3hkVldFV1hhcGhjWFNTN0RyWHJSDQpnbEx5TlR5SlNReUkyZUpLWERRVzJTRXZJcUFRZVhWeUYzbE1YREV1bGFqcVo3Q3RMeTFPUXlsY1B5Wk5saUg2DQpsSDljMmhNeGJ3b3RzMnhpc0I0ajByM1hBdHVFUDZzRFlHdVlhaDVvZ0lOMzd2YSs3alB1WDJxaGJDK2czM01XDQpORnlCWHFHRTN3MExUK0VuejBXY1RFdWFuRVFHZ2xWdVhKOERoVnlEaFdHdlNKamJ1OWV4M053U3BkR0E0QjRKDQpwaFhwSWJtREg2cGlPR0Z4cm5QMldoc0pUcTFHQlBhcmJqU1pZSVRqWmFCR2EyNHZUZ1FYaU5hN3ZxV0hxSkZXDQp1UzgyWWtQVFpSUjI2dDdWaDBTRDZLeHBESEdVS0ozYlN2UURrU2l5bkJJZnlqSWlnRlptQzRzaWxzc0JWVU1KDQozb3A0QVRaTmhPUS9sVHlFaVM3NjdiaW1WODFPT1RsQW1DdFdUMTNBOGlmV3NtYW1DZ2JSeHRmbDVuMStIWVZrDQpTK2puQXNRYVZMWWxobHBBb2FTdWVBTDdsUVlBME5hZTc1NDR4ejdFTW9ad3QyemFUTHNyK250OVF2YTdxSEJLDQpFdXVpcDIzWTZOWk5CWE4vSWEyRnVuODBEak5qY1pQZFJjTkdheVk4MHdZaFBPME9MNHRYQ1JSR2U1L3J4NmtwDQpYNVRCYUNrZ0wvODVDZGdaMTB3VWRQL0xLTFdvcVI2Nm9YamxqeEtKVURucUEzY2IxeWFLZ1dxRTkzdFFDeVpaDQp6ZTdEMk9YdUIzYWc4VzcvbzJDcDhON3IyS1ptSXFzZ3FWUVRiN3RDbTFJd3ZSQnhOWlk2M3Ira01SUGYxM1JlDQp5bTRIZ2ZnaVJNV1JxZ3BNNk5UdXpiNlVHbVkxQmdEMFYzbUFYUFN2OCthYSt5RkI0ZjlqejJyeXVuUGVjSlIyDQpESDllVnBiWUl5Uk1UMWg2aHNHTHBnWE5CWDJWQVRpZ3dZVzdGMkZmcG5vT0o5eEhEQ1NDWUpKQWljYVptYW84DQp0WFdwVHZVQmhjKy9vSXdNNVZNYTdVWGlWaVRJN01WaGszZVdjOVM3NFNBMGpFOXBiVkI1czNIVmhxWlFpYzhuDQp4RlBZeXk2NDlrd1BXdjhyc2U0MzVBakIzNUhwd2xMTTFpZXQ3aytUU0FBS1pZMUxDL2Y5a1VpVHBndmN5N1pMDQo2MUZFWHloVDVhWTV6N0JZZnp0VVBNclE0bjdpazZzRi8xTStJdzBLOGtJdVl5S2I4d1NaZkU3aGJDbFZ2ZmljDQpZUHpyYS8xRTEzLzExU3VJOGNBcXphNlpnbUtKL3ZwNUdrYUMrZldYeWhBVXBVVVVBMUF5UmlsL2lMNzBuVVRYDQprSlQ4LzNTdDhqWW1EcDJRUXRYZXM5bWdVSFYzN3NHTEhRRnZwWVRkMVlJaUlkSHNwajNkRlBNMXN6NlJpcjByDQpiNjdSV2tmTlhENWdXYzA1eW9xczUzeFdkWW02T3I5eGhFalJ2TFhwb3kxQlNtd0JpbXVvcC94VmQrWE10Z2F4DQpJUVhFeWcweWFnWEZDVzdIYWxHTU9qUVYzTDE2bWpvdCtkejd0QTkwWlhOMFFHdHlhWFJwY3k1dmNtZUpBZFFFDQpFd0VLQUQ0V0lRVFNnNlgxOWZYc3FwN3hoY1d1aTJtVUVXTVZvd1VDVzJJU3d3SWJBd1VKQThKbkFBVUxDUWdIDQpBZ1lWQ2drSUN3SUVGZ0lEQVFJZUFRSVhnQUFLQ1JDdWkybVVFV01WbzNqNEMvOXltWjhodG1TZWxEY1ZzbFNrDQozalZ1U0VnUXJFZndPNS9nL1ZtR2l2QUhBOFdSSE15V2xaYmpmaEJJVCtlbEJEMWNtbVd1NFFKbW1NZjJBc1YyDQpUR042WUpiNUtKK2NPampiY3dpUHUxNVNma2thc3JzRmw5Q2tHbVJQcXRRYnBTVDJwTkUxVS9MQzJhS0llRmxJDQpzcTFQSmpmLzh5Mk9rMXM2cDVUQVp2Wm1PMmtmRWRuK0NScXFNK1QxbXNrVjMxL2ZXcXo5OFBEa1djVExOd0xBDQpDRWpWZE1IdHdpRFBoS1JCckNCRmVZUmpHcXV1TkNtUERPVXV0bGlxVkhnZlVXTlZKOTN6VFBLNU4zd0dsNGxFDQpvUVZ0N2thRUNEWW1qdTJHdGg0Y0xtNWNDWkxVcXJGZTBKNmFkc21Lam9rMWcxSmZwWGRSR3BXRXF4R3RFNEdEDQpQb09ZTG11OWMrb3NoWTYrOVBsWFkyRDFTSFJtTzJQN1Jza2lvczJFdUJjUGJqS05JZGxHR2RxZ1hYRXZXT2lxDQpjSDBEZWdRbW5vQmplYTZwUE14TTF0RHVNc2dFVmNGY3Y1SFhaTlBJbWZGVGNwcG5waGFrQy9EQWlUbkNYMTE1DQpXanpHNFlvU3dOZ0JuM2FCZ3VWWGg2NE5EV1VEZ0lqVXRYZElwNTJNS3IvSlJvS2RCWVlFVzJJU3d3RU1BTVZpDQpweHVJdk1LTllTaFpPR1NXb1dJRktYdGQrWDVpRHFtTnMxYitzRTlJS1NqM295Tk9Qc2xVNGloUFRhLzFDcDVCDQpxOWZ3b29qWlFzYmhkTWhCaFhDSkFYVHFlb0trRVdLNjZnTHQ1dFdKWFZVbDlJR1dJM0thTkJDSWZrUytQclVIDQpKR1RjN3lDTElybnRaaFd6T0xZSkd0R1lkLzQ3eEczUUhWOU1wbGNwd1pZUzJiaWxwUEx2STF0cjhDREpia3ltDQpVTzBHZ1h0QjBDVC9HbmVNcGkyZWR0MW1OZmNzOGJsMlFjZkZ6WjRua1RDK2IyRlZ5MXhJSWc5VlFML1VkdGxlDQpCTlQ2VnIzd3RUWGJDQkxIeExaMEtLWjF2MmJLQXFZQi9RRTZsOStyUG5yazVBMVpTTXBVWkhtNng4M2tFOXNXDQphMFd1dGp2cExIbDVpM0JxMlhnS1A5SUlvQzVQREE2TDlWdzVtQklvQ3dJWXowakpzYXkrdkNsbVdjcTQ1K0NBDQpsdUFRU1lGTjQzbm0xN1pWUS8yYUl5dUpHRVBKQTFWUEpwdERNTEV1TW45TUZYVytiRnhXL3BJNGt1ZTZGZ1JTDQo3TGNhV1ZvSFVkQVJkQjlFS2pSVUxzblhVNVRJTFVxUXJlUXF1RndZWHE4UW5YaXlSZGNFYmhSaEdGU0l4d0FSDQpBUUFCL2djREFnTnllaFpCblc3ZS81bnBEQU9nV0NxYWMvQnhtc3FsazFFZk5VdU9SeTlIRUJsbkRaUlFRd3E1DQpENHdkZWZXTjN3ZGQ4TGFoMXdkUnBHWCs1bU9vVC81TnpVZ0htODV2cjNrVTBMeTRnNHhZM2gyNm0zeUhWbzRDDQpzREVGNkpvVFpiZWRKWURIZzdCSVZWeTR4YzN3NVUwdmRsdzVjWTBjR0hHT2gzZ2ZXcVdVUXBkY01WWXFnbG5TDQptOVMzQ1NCSWkwMEx1OXErQkkrNW11THJsazVGTHRVSmJCMkNucXRPeTlWRkNFaDBPaUxScXptZ3g4Z0dwUUVjDQptcTJ6TFRIY0hZVjF0UUdiSzBKUitNajVMakFYSW1aMVRwMGdSbUszRmhaK3VpaGxoK2ZHdUZuNHgzellEZWlRDQpXUkJpdVZEM1VRSEFZbUFCS01KZm9jb0Y1RDlBTVJiYVZ6eGUzVVU0YjBNaTVCL1hta0x5MVhjbWI0M3RaWW9ZDQpOeUZQbFREdUVVRE42MGtlSEdrQ3F3YVVyYVdGV1QzVHY0a0xHbDVGRy9UVHlwaXJ6WVA0TUU5M2diQ0ZoQXdwDQpaQzZnRFltNGF3VjRNRXk4T3BnRWZPSlpiSzJEeEUycG8wNzZ0RHd3dWh1UGpkVmhXR2oxS2FJY3RBdDRtMzJnDQplK1lxVHN2ZEw4N2VEVnMvUkdUampqUjQxZjREZ1lha3B4cFdrNWwrYWVKNnNWemdlNUx4R0ZUcGVuYStWU2NmDQpaTHpyR2E5aXB2ODR2Rk1iNmk5ZGE2VDhtTyswS0gzUUZwN29URW56Z2VxV1BRdEs4T3UrV1pjQ1ZMNFpwanlGDQpBQ0p3QXVoMzlWV215emdIS2tIajhkQndRTm02R2ZZK0JCWDdBNkQrNld6TW4yazVOTkxBdG5GYTZJZ3RJMzZlDQp6QjBDMTRwSGRUK0pudml5Q1Y0NFpaL3gycU5NcC9lUTJYLzVNcFp2Y3MzNWZLcFFGczFHdlVrWGtwTVVMdWVIDQpHZUJ5N1VVZGQwREpvSGJUZDFOZTd4WnFLN1YxNlJaeFhPU3I0c1E4RUVURVoxd0gwSXZNczE0NTB6K1ByZnBmDQpwdVNsb3Q1T2pkTGg3bnBvUXpRcHFmUmN2N2JONWNtZmpMeHlHRUdmZFBLOHRXWDdHb2JTYjJjTmtqY3dJNnY0DQpGQzV2UnUxYjVsUFZXSmNHMS9KeVpLWjNuWWxPWnFTM2U0REg2dnBDaFlJUHR4UFkwRHlhZStIUWhHQWdJMnFyDQo3TnpVOUFuQU0vQmFMc1FJL3lVb0NGVVBYZlgwMUYwVjI2OTlZN05HSUl3cXJHVzZXOXpaRmR6OGdaUlF2VlRsDQpqcFRmSUV1OGNVTjQxSDBjTk1NY3JpV0hsbFRRZkJoR1JjemJjMFhwYTRmTGRYQmdKNW9HRzVFVHBTVGdlbGFoDQpKQWdJWWdHc3FJYWg1U2ZsdGp4QjE2QlpLM3U5WE9KcjAzR0dRT0hEbEtCc0JSWGhBQjlRRVFsSjJZdmVoMzVYDQorUE1lSGcwMEhzWEpwamx1MnRRQlBnS0JERG1HaHJQZHFSenNRRzBIWVFSNDJCeUFWazNaNGdTK09aMWYrZ1I3DQpEc2Uvcm1JeXpPcE9pNWFGQVVLSXJGRGNBS2YvQ2FKNXlialhCM1dkcUtPOEZ1U2pTOXVaTU10d1VYMXlSaHZyDQpWUHk4SDBtNmFXNGJ6cExIQWxkYUFXRHBhMGJRLzROaWpESmxBajdTSjlpZUlRZ3U3VE9Oa3hxbnpNTHU0UDZ3DQpiWFB1M2g1R2NTaU9nT2lPaVFHMkJCZ0JDZ0FnRmlFRTBvT2w5ZlgxN0txZThZWEZyb3RwbEJGakZhTUZBbHRpDQpFc01DR3d3QUNna1Fyb3RwbEJGakZhTVMxZ3YvWUhRVHhTWTNwNjlYWk0rZkNlUFBWODJLMG0xR3hzc2ZzaWppDQplTGpuMFhHWnNUWEdSNEx3YkpWTTM0djVmeHRnMTlDNDIycjhDMmlvSFFhTndLdVRldU9icHl1bnFxaUVHOUhDDQpFVkQ3Wm9ZSkVITzhVSlRYeFVPL1cxQlZZQTY0R3Zvd1dIT290c1ViZ1AzL1FvbHROcTF0dk1haDFTOUFkcitIDQpTenJ0dDRVdkdBdlpIRzJHU09PamRwOEFmWFNpbnJCYmEzdUthcFVzZ0gzRWlTdmxnQXVDYWFzQUo0bnBwcHg5DQp2dHh5aEdRWnQ0MXVTcDgzd2svcjQrYVJuMkZKNnVVR1VTd0U3WmNybjVhMFE4MDUyYnFya3h3Zk1ZMGd1UThODQpTdzRsazBEZTZoU2FkcjZlYms1cEw5SW8xZWZ4ZHBVQzVxVXZQeUc5OTU0QklYVVBCK3cwQURhcU95TFAyRUZpDQpyTnFNN1hUT0h3ZkFZTkVucVRKTEl4c29ZUUo1ejkvR1JMRGlMRHprV2YzMXlNS0xSYWV2UkJqeEJFcnhhMnA4DQpWbVdneURCbXE4RDE3Sk5MdWl4MmI4RXkxdmFueWJVMU5iTFlUZkxibUV6R1NXb0d1VldqUEk4VFJMWWcyRUZjDQoveTNOYkpTYTNaVzVhM0FwMUtEZUJzK1h3QUU3DQo9a0VwYQ0KLS0tLS1FTkQgUEdQIFBSSVZBVEUgS0VZIEJMT0NLLS0tLS0="
